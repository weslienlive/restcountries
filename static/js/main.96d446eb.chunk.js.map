{"version":3,"sources":["StyledComponents.js","App.js","index.js"],"names":["View","styled","div","Search","button","Searchbar","input","Flag","a","Info","XLS","CSV","XML","App","useState","displayData","data","country","capital","region","subRegion","population","area","nativeName","timeZone","flag","errorMessage","restCountries","setRestCountries","formik","useFormik","initialValues","location","onSubmit","event","actions","resetForm","values","url","fetch","then","response","json","getNativeNames","name","native","Object","keys","map","item","common","subregion","timezones","official","flags","png","catch","error","handleSubmit","autoComplete","id","type","placeholder","onChange","handleChange","value","href","target","onClick","exportType","exportFromJSON","types","csv","fileName","xml","toXML","header","indent","blob","Blob","saveAs","ExportToCsv","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","title","useTextFile","useBom","useKeysAsHeaders","generateCsv","Swal","fire","icon","text","confirmButtonColor","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.96d446eb.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const View = styled.div`\r\n  text-align: center;\r\n  color: #393b3c;\r\n  font-size: 20px;\r\n  padding-top: 10px;\r\n`;\r\n\r\nexport const Search = styled.button`\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 20px;\r\n  background-color: #699cb3;\r\n  color: white;\r\n  transition: all 0.3s;\r\n  height: 50px;\r\n  width: 150px;\r\n\r\n  :hover {\r\n    border: 1px solid #699cb3;\r\n    background-color: white;\r\n    color: #699cb3;\r\n    transition: all 0.3s;\r\n  }\r\n`;\r\n\r\nexport const Searchbar = styled.input`\r\n  outline: 0;\r\n  margin: 0;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  color: #393b3c;\r\n  height: 50px;\r\n  background: transparent;\r\n  border: none;\r\n  border-bottom: 2px solid #8c92ac;\r\n  margin-bottom: 50px;\r\n  transition: all 0.3s;\r\n\r\n  :focus {\r\n    border-bottom: 2px solid #393b3c;\r\n    transition: all 0.3s;\r\n  }\r\n`;\r\n\r\nexport const Flag = styled.a`\r\n  text-decoration: none;\r\n  color: #393b3c;\r\n\r\n  :hover {\r\n    color: #979c9f;\r\n  }\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  padding-top: 2px;\r\n`;\r\n\r\nexport const XLS = styled.button`\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 20px;\r\n  margin-top: 10px;\r\n  background-color: #699cb3;\r\n  color: white;\r\n  transition: all 0.3s;\r\n  height: 50px;\r\n  width: 150px;\r\n\r\n  :hover {\r\n    border: 1px solid #699cb3;\r\n    background-color: white;\r\n    color: #699cb3;\r\n    transition: all 0.3s;\r\n  }\r\n`;\r\n\r\nexport const CSV = styled.button`\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 20px;\r\n  margin-left: 10px;\r\n  background-color: #699cb3;\r\n  color: white;\r\n  transition: all 0.3s;\r\n  height: 50px;\r\n  width: 150px;\r\n\r\n  :hover {\r\n    border: 1px solid #699cb3;\r\n    background-color: white;\r\n    color: #699cb3;\r\n    transition: all 0.3s;\r\n  }\r\n`;\r\n\r\nexport const XML = styled.button`\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 20px;\r\n  margin-left: 10px;\r\n  background-color: #699cb3;\r\n  color: white;\r\n  transition: all 0.3s;\r\n  height: 50px;\r\n  width: 150px;\r\n\r\n  :hover {\r\n    border: 1px solid #699cb3;\r\n    background-color: white;\r\n    color: #699cb3;\r\n    transition: all 0.3s;\r\n  }\r\n`;\r\n","import { useFormik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Search,\r\n  Searchbar,\r\n  Flag,\r\n  Info,\r\n  CSV,\r\n  XML,\r\n  XLS\r\n} from \"./StyledComponents\";\r\nimport { ExportToCsv } from \"export-to-csv\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport { toXML } from \"jstoxml\";\r\nimport { saveAs } from \"file-saver\";\r\nimport Swal from \"sweetalert2/dist/sweetalert2.all.min.js\"\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [restCountries, setRestCountries] = useState({\r\n    displayData: false,\r\n    data: \"\",\r\n    country: \"\",\r\n    capital: \"\",\r\n    region: \"\",\r\n    subRegion: \"\",\r\n    population: \"\",\r\n    area: \"\",\r\n    nativeName: [],\r\n    timeZone: \"\",\r\n    flag: \"\",\r\n    errorMessage: false\r\n  });\r\n\r\n  const displayError = () => {\r\n    Swal.fire({\r\n      icon: \"error\",\r\n      title: \"Oops...\",\r\n      text: \"Nenhum resultado encontrado!\",\r\n      confirmButtonColor: \"#699cb3\"\r\n    });\r\n\r\n    setRestCountries({\r\n      errorMessage: false\r\n    });\r\n  };\r\n\r\n  const generateCsvFile = () => {\r\n    const options = {\r\n      fieldSeparator: \",\",\r\n      quoteStrings: '\"',\r\n      decimalSeparator: \".\",\r\n      showLabels: true,\r\n      showTitle: true,\r\n      title: \"csv file\",\r\n      useTextFile: false,\r\n      useBom: true,\r\n      useKeysAsHeaders: true\r\n    };\r\n\r\n    const csvExporter = new ExportToCsv(options);\r\n    csvExporter.generateCsv(restCountries.data);\r\n  };\r\n\r\n  const generateExcelFile = () => {\r\n    const data = restCountries.data;\r\n    const fileName = \"xls file\";\r\n    const exportType = exportFromJSON.types.csv;\r\n\r\n    exportFromJSON({ data, fileName, exportType });\r\n  };\r\n\r\n  const generateXmlFile = () => {\r\n    const xmlOptions = {\r\n      header: true,\r\n      indent: \"  \"\r\n    };\r\n    var xml = toXML(restCountries.data, xmlOptions);\r\n    var blob = new Blob([xml], { type: \"text/xml\" });\r\n    saveAs(blob, \"xml_file.xml\");\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      location: \"\"\r\n    },\r\n    onSubmit: (event, actions) => {\r\n      const location = event.location;\r\n      actions.resetForm({ values: { location: \"\" } });\r\n      const url = `https://restcountries.com/v3.1/name/${location}`;\r\n\r\n      fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const getNativeNames = data[0].name.nativeName;\r\n          const native = Object.keys(getNativeNames).map((item) => {\r\n            const nativeNames = getNativeNames;\r\n            return nativeNames[item];\r\n          });\r\n\r\n          setRestCountries({\r\n            displayData: true,\r\n            data: data,\r\n            country: data[0].name.common,\r\n            capital: data[0].capital[0],\r\n            region: data[0].region,\r\n            subRegion: data[0].subregion,\r\n            population: data[0].population,\r\n            area: data[0].area,\r\n            timeZone: data[0].timezones[0],\r\n            nativeName: native[0].official,\r\n            flag: data[0].flags.png\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setRestCountries({\r\n            errorMessage: true\r\n          });\r\n        });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <View>\r\n      <form onSubmit={(event) => formik.handleSubmit(event)}>\r\n        <Searchbar\r\n          autoComplete=\"off\"\r\n          id=\"location\"\r\n          name=\"location\"\r\n          type=\"text\"\r\n          placeholder=\"Coloque a cidade\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.location}\r\n        />\r\n        <Search type=\"submit\">Pesquisar</Search>\r\n      </form>\r\n\r\n      {restCountries.displayData && (\r\n        <div>\r\n          <Info>País: {restCountries.country}</Info>\r\n          <Info>Capital: {restCountries.capital}</Info>\r\n          <Info>Região: {restCountries.region}</Info>\r\n          <Info>Sub Região: {restCountries.subRegion}</Info>\r\n          <Info>População: {restCountries.population}</Info>\r\n          <Info>Área: {restCountries.area}</Info>\r\n          <Info>Nome Nativo: {restCountries.nativeName}</Info>\r\n          <Info>Fuso Horário: {restCountries.timeZone}</Info>\r\n          <Flag href={restCountries.flag} target=\"_blank\">Mostrar Bandeira</Flag>\r\n          <br />\r\n          <XLS onClick={generateExcelFile}>Exportar em xls</XLS>\r\n          <XML onClick={generateXmlFile}>Exportar em xml</XML>\r\n          <CSV onClick={generateCsvFile}>Exportar em csv</CSV>\r\n        </div>\r\n      )}\r\n\r\n      {restCountries.errorMessage && displayError()}\r\n    </View>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}